version: "3"

services:
  db:
    build:
      context: . 
      dockerfile: ./packages/db/Dockerfile 
    restart: always
    env_file:
      - ./packages/db/.env
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5
  web:
    container_name: web
    build:
      context: .
      dockerfile: ./apps/web/Dockerfile
    restart: always
    ports:
      - 8080:3000
    networks:
      - app_network
  admin:
    container_name: admin
    build:
      context: .
      dockerfile: ./apps/admin/Dockerfile
    restart: always
    ports:
      - 8081:80
    networks:
      - app_network

  server:
    container_name: server
    build:
      context: .
      dockerfile: ./apps/server/Dockerfile
    restart: always
    ports:
      - 3000:8080
    depends_on:
      db:
        condition: service_healthy
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - PORT=8080
    networks:
      - app_network

# Define a network, which allows containers to communicate
# with each other, by using their container name as a hostname
networks:
  app_network:
    #external: true
volumes:
  postgres_data:
